class Stack<T> {
    private items: T[];

    constructor() {
      this.items = [];
    }

    push(item: T): void {
      this.items.push(item);
    }

    pop(): T | undefined {
      return this.items.pop();
    }

    peek(): T | undefined {
      return this.items[this.items.length - 1];
    }

    isEmpty(): boolean {
      return this.items.length === 0;
    }

    size(): number {
      return this.items.length;
    }
  }
  const stack = new Stack<number>();
  stack.push(1);
  stack.push(2);
  stack.push(3);

  console.log(stack.peek()); // Output: 3

  console.log(stack.pop()); // Output: 3
  console.log(stack.pop()); // Output: 2
  console.log(stack.pop()); // Output: 1
   console.log(stack.isEmpty()); // Output: true
  console.log(stack.size()); // Output: 0
